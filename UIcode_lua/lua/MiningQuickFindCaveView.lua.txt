require "MiningQuickFindCaveItemSlot"

---@type Client.Library.UIItemGrid
local lessSevenItemGrid
---@type Client.Library.UIItemGrid
local moreSevenItemGrid
---@type UnityEngine.GameObject
local lessSevenItemGridObj
---@type UnityEngine.GameObject
local moreSevenItemShowObj

---@type UnityEngine.Transform 上一次选中的item
local lastChoiceTrans

---@type Client.Library.ViewBase
local selfViewBase
---@type table 所有矿点类型
local allMiningCaveTypeArr

local MAX_NO_SCROLL_NUMBER = 7

---初始化
function DoInit()
    selfViewBase = self
    selfViewBase.Shadow = 1
    lessSevenItemGrid = selfViewBase:GetComponentAtPath("CaveItemGrid", CLS_UI_ITEM_GRID)
    moreSevenItemGrid = selfViewBase:GetComponentAtPath("CaveSVMoreSven/ScrollRect/Viewport/CaveItemGrid", CLS_UI_ITEM_GRID)
    lessSevenItemGridObj = lessSevenItemGrid.gameObject
    moreSevenItemShowObj = selfViewBase:GetGameObjectAtPath("CaveSVMoreSven")
end

---刷新矿点列表
local function RefreshCaveList()
    lessSevenItemGrid:ClearItems()
    moreSevenItemGrid:ClearItems()
    if allMiningCaveTypeArr then
        if #allMiningCaveTypeArr < MAX_NO_SCROLL_NUMBER then
            lessSevenItemGridObj:SetActive(true)
            moreSevenItemShowObj:SetActive(false)
            lessSevenItemGrid:RefreshItemSlots(allMiningCaveTypeArr, selfViewBase.gameObject, "MiningQuickFindCaveItemSlot")
        else
            lessSevenItemGridObj:SetActive(false)
            moreSevenItemShowObj:SetActive(true)
            moreSevenItemGrid:RefreshItemSlots(allMiningCaveTypeArr, selfViewBase.gameObject, "MiningQuickFindCaveItemSlot")
        end
    end
end

---设置item的选中状态
local function SetItemState(objTrans, show)
    if objTrans then
        local selectedObj = objTrans:GetGameObjectAtPath("selected")
        selectedObj:SetActive(show)
    end
end

---设置界面数据
function SetParamDataList(objs)
    allMiningCaveTypeArr = objs[0]
end

---动画结束回调
function OnAnimationFinished()
    if allMiningCaveTypeArr ~= nil then
        RefreshCaveList()
    end
end

---item被点击
function OnCaveItemGridMiningQuickFindCaveItemSlotClick(obj)
    local nowObjTrans = obj.gameObject.transform
    if nowObjTrans == lastChoiceTrans then
        SetItemState(nowObjTrans, false)
        lastChoiceTrans = nil
        return
    else
        SetItemState(nowObjTrans, true)
        SetItemState(lastChoiceTrans, false)
        lastChoiceTrans = nowObjTrans
    end
end

---一键找矿点击
function OnQuickSureBtnClick()
    if lastChoiceTrans == nil then
        CsBridge.ShowHintBoxTwo(Language:getStr("PleaseChoiceOneMiningCaveItem"))
    else
        local data = lastChoiceTrans:GetComponent(CLS_ITEM_SLOT).m_data
        selfViewBase:SendCommand("QuickFindCaveItemMap", data)
    end
end

---关闭按钮点击
function OnCloseBtnClick()
    lastChoiceTrans = nil
    selfViewBase:HideView(selfViewBase.gameObject.name)
end

---遮罩点击
function OnMaskClick()
    lastChoiceTrans = nil
    selfViewBase:HideView(selfViewBase.gameObject.name)
end

---关闭界面回调
function OnClose()
    lastChoiceTrans = nil
    lessSevenItemGrid:ClearItems()
    moreSevenItemGrid:ClearItems()
end

---退出module回调
function DoExit()
    lessSevenItemGrid = nil
    moreSevenItemGrid = nil
    lessSevenItemGridObj = nil
    moreSevenItemShowObj = nil
    lastChoiceTrans = nil
    selfViewBase = nil
    allMiningCaveTypeArr = nil
    MAX_NO_SCROLL_NUMBER = nil
end