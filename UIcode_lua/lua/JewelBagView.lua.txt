--
-- 版权所有：archly
-- Author: dyl
-- Date: 2019-01-30 18:24:24

local isInit = false

local ScreenUtils = require "ScreenUtils"

local togGroup
local togTypeArr
local flag

local bagGrid
local nothingObj

local sortBtnNameTxt
local allNumTxt

local waitExtendBagNumAnim = false

local function InitTogArr(root,togTypeArr)
    local togType = {
        obj = root.gameObject,
        togArr = {}
    }
    for i=0,root.childCount-1 do
		local tog = root:GetChild(i):GetComponent("ToggleArchly")
        tog.ClickAnim = true
        if i >= 1 then
            tog.SubImg = tog.transform:GetComponentAtPath("icon01Img",CLS_IMAGE)
        end
		table.insert(togType.togArr, tog)
    end 
    table.insert(togTypeArr,togType)
end

local function RefreshJewelBagScreenView(type,name)
    for i,v in ipairs(togTypeArr) do
        v.obj:SetSelfActive(i == type)
    end
    local togArr = togTypeArr[type].togArr
    ScreenUtils.InitScreenUI(togGroup,togArr,flag)
    sortBtnNameTxt.text = name
end

function DoInit()	
    self.Anim = 0
end

function InitUI()
    togGroup = self:GetComponentAtPath("Center/TogGroup",CLS_TOGGLE_GROUP_ARCHLY)
    togTypeArr = {}
    local root = togGroup.transform:GetComponentAtPath("Quality",CLS_RECTTRANSFORM)
    InitTogArr(root, togTypeArr)
    root = togGroup.transform:GetComponentAtPath("Type",CLS_RECTTRANSFORM)
    InitTogArr(root, togTypeArr)
    flag = togGroup.transform:Find("Flag")
    bagGrid = self:GetComponentAtPath("Center/kuangSV/ScrollRect/Viewport/BagGrid",CLS_UI_ITEM_GRID)
    nothingObj = self:GetGameObjectAtPath("Center/Nothing")
    sortBtnNameTxt = self:GetComponentAtPath("other/SortBtn/NameTxt",CLS_TEXT)
    allNumTxt = self:GetComponentAtPath("other/AllNumTxt",CLS_TEXT)
end

function OnAnimationFinished()
    if not isInit then
        InitUI()
        isInit = true
    end
    self:SendCommand("InitJewelBagData")
end

function BeoforeReturnBack()
    self:HideView(self.gameObject.name)
end

function Active()
    self:SendCommand("RebindJewelBagScreen")
end

function OnDoUnhide()
    self:SendCommand("RebindJewelBagScreen")
end

function DoExit()
    isInit = nil
    ScreenUtils = nil

    togGroup = nil
    togTypeArr = nil
    flag = nil

    bagGrid = nil
    nothingObj = nil

    sortBtnNameTxt = nil
    allNumTxt = nil
end

function OnClose()
    bagGrid:ClearItems()
    nothingObj:SetSelfActive(false)
    ScreenUtils.Clear()
end

function OnNotification_RefreshJewelBagView(objs)
    local bagData = objs[0]
    nothingObj:SetSelfActive(#bagData == 0)
    bagGrid:RefreshItemSlots(bagData, self.gameObject, "ItemSlot")
end

function OnNotification_RefreshJewelBagScreenView(objs)
    local type,name = objs[0],objs[1]
    RefreshJewelBagScreenView(type,name)
end

function OnNotification_RefreshJewelBagCountDesp(objs)
    local countDesp = objs[0]
    allNumTxt.text = countDesp
end

function OnNotification_ShowJewelBagCountEffect(objs)
    local countDesp = objs[0]
    waitExtendBagNumAnim = true
    TextChangeColorAnim(allNumTxt,function()
        allNumTxt.text = countDesp
        waitExtendBagNumAnim = false
    end)
end

function OnNotification_CloseJewelSubView(objs)
    self:HideView(self.gameObject.name)
end

function OnBagGridItemSlotClick(obj)
    local data = obj.m_data
    self:SendCommand("OpenJewelBagTipView", data)
end

function OnBookBtnClick(sender)
    self:SendCommand("OpenJewelBookView")
end

function OnSortBtnClick(sender)
    self:SendCommand("ChangeJewelBagSort")
end

function OnAddBtnClick(sender)
    if not waitExtendBagNumAnim then
        self:SendCommand("ExtendJewelBag")
    end
end

function OnTogGroupClick(isOn,index)
	ScreenUtils.TogGroupClick(isOn,index)
end