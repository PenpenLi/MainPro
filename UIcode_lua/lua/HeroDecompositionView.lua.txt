local selectPosArr

local raceTogArr
local raceFlag

local heroGrid
local selectHeroGrid

local effectObj
local posEffectObj
local heroEffect

local previewBtn
local quickBtnTxt

local hasItemSlot = false
local cnt = 0
local decomposed = false
local curRace = 0

function DoInit()
	self.Shadow = 0
	self.Anim = 0
	InitUI()
end 

function InitUI()
	local raceTogGroup = self.transform:Find("Bottom/TogGroup")
	raceTogArr = {}
	for i = 1, raceTogGroup.childCount - 1 do
		local tog = raceTogGroup:GetChild(i):GetComponent("ToggleArchly")
		tog.ClickAnim = true
		if i >= 2 then
			tog.SubImg = tog.transform:GetComponentAtPath("icon01Img", CLS_IMAGE)
		end
		table.insert(raceTogArr, tog)
	end
	raceFlag = raceTogGroup:Find("Flag")

	heroGrid = self:GetComponentAtPath("Bottom/HeroSV/ScrollRect/Viewport/HeroGrid", CLS_UI_ITEM_GRID)
	selectHeroGrid = self:GetComponentAtPath("Center/SelectHeroSV/ScrollRect/Viewport/SelectHeroGrid", CLS_UI_ITEM_GRID)

	effectObj = self:GetGameObjectAtPath("Effect")
	posEffectObj = effectObj.transform:GetGameObjectAtPath("Pos")
	heroEffect = effectObj.transform:Find("HeroBase")
	selectPosArr = {}
	for i = 0, posEffectObj.transform.childCount - 1 do
		table.insert(selectPosArr, posEffectObj.transform:GetChild(i))
	end
	previewBtn = self:GetComponentAtPath("Center/PreviewBtn", CLS_BUTTON_ARCHLY)
	quickBtnTxt = self:GetComponentAtPath("Center/QuickBtn/nameTxt", CLS_TEXT)
end

function OnAnimationFinished()
	hasItemSlot = false
	cnt = 0
	self:SendCommand("InitDecompositionData")
end

function Active()
	self:SendCommand("RefreshHero",curRace)
end

function OnNotification_RefreshDecompositionView(objs)
	local heroArr = objs[0]
	local selectHeroArr = objs[1]
	heroGrid:RefreshItemSlots(heroArr,self.gameObject,"HeroItemSlot")
	selectHeroGrid:RefreshItemSlots(selectHeroArr,self.gameObject,"HeroItemSlot")
	hasItemSlot = true
end 

function OnNotification_RefreshSelectView(objs)
	local selectHero = objs[0]
	selectHeroGrid:SingleRefreshSlot(selectHero)
end 

function OnNotification_InitScreen(objs)
    raceTogArr[objs[0]+1].isOn = false
    raceTogArr[1].isOn = true
    CsBridge.UnityHelper.SetAnchoredPosition(raceFlag.gameObject,raceTogArr[1].transform.localPosition.x,raceFlag.localPosition.y)
end

function OnNotification_ScreenAnim(objs)
	curRace = objs[0]+1
    local direct = objs[1]
    local offset = 10
    if direct then
        offset = -offset
    end
    raceTogArr[curRace].isOn = true
    local targetX = raceTogArr[curRace].transform.localPosition.x
    local t1 = CsBridge.TweenUtils.MoveTo(raceFlag,targetX+offset,raceFlag.localPosition.y,0.15,function()
        local t2 = CsBridge.TweenUtils.MoveTo(raceFlag,targetX,raceFlag.localPosition.y,0.05)
        t2:DoPlay()
    end)
    t1:DoPlay()
end

function OnNotification_ScreenHero(objs)
	local heroArr = objs[0]
	heroGrid:RefreshItemSlots(heroArr, self.gameObject, "HeroItemSlot")
end

function OnNotification_RefreshSingleHero(objs)
	heroGrid:RefreshSlot(objs[0],objs[1])
end

function OnHeroGridHeroItemSlotClick(obj)
	if obj.m_data.IsSelected then
		self:SendCommand("CancelSelectHero",obj.m_data)
	else
		self:SendCommand("SelectHeroEffect",obj)
	end
end

function OnSelectHeroGridHeroItemSlotClick(obj)
	self:SendCommand("CancelSelectHero",obj.m_data)
end

function OnQuickBtnClick(sender)
	self:SendCommand("QuickOperation")
end 

function OnDecompositionBtnClick(sender)
	self:SendCommand("Decomposition")
end

function OnPreviewBtnClick(sender)
	self:SendCommand("DecompositionPreview")
end

function OnNotification_RefreshPreviewBtn(objs)
	previewBtn.Gray = objs[0]
end 

function OnNotification_RefreshQuickBtn(objs)
	quickBtnTxt.text = objs[0]
end

function OnNotification_SelectHeroEffect(objs)
	local obj = objs[0]
	local curPos = objs[1]
	ShowHeroEffect(obj.m_data,obj.transform.localPosition,selectPosArr[curPos],function()
		self:SendCommand("SelectHero",obj.m_index)
	end)
end 

function ShowHeroEffect(hero,startPos,endPos,onFinish)
	effectObj:SetSelfActive(true)
	heroEffect.gameObject:SetSelfActive(true)
	heroEffect.localPosition = startPos
	BindHeroBaseValue(heroEffect,hero)
	local t = CsBridge.TweenUtils.MoveTo(heroEffect,endPos.transform.localPosition.x,endPos.transform.localPosition.y,0.2,function()
		effectObj:SetSelfActive(false)
		heroEffect.gameObject:SetSelfActive(false)
		onFinish()
	end)
	t:DoPlay()
end 

function OnNotification_SelectHero(objs)
	local index = objs[0]
	local itemData = heroGrid:GetItemDataByIndex(index)
	if	itemData~=nil then
		itemData.IsSelected=true
		itemData.data.IsSelected=true
	end
end

function OnNotification_CancelSelectHero(objs)
	local heroSelectData = objs[0]
	local itemData = heroGrid:GetItemDataByData(heroSelectData)
	if	itemData~=nil then
		itemData.IsSelected=false
		itemData.data.IsSelected=false
	end
end

function OnNotification_DecompositionEnd(objs)
	local num = objs[0]
	if num >=1 then
		--posEffectObj:SetSelfActive(true)
		effectObj:SetSelfActive(true)
	end 
	for i=1,num do
		ShowDecompositionEffect(i,function()
			if i >= num then
				heroGrid:RefreshBaseData(objs[1])
				decomposed = true
				self:SendCommand("ShowDecompositionEffectEnd")
				if i==num then
					effectObj:SetSelfActive(false)
				end 
			end
		end)
	end 
end

function ShowDecompositionEffect(pos,onFinish)
	CsBridge.CacheAssetsByGroup("HeroDecompositionSpine",function()
		local obj = CsBridge.objectCache:CreateObject("HeroDecompositionSpine", true)
		obj.transform:SetParent(selectPosArr[pos],false)
		CsBridge.UnityHelper.SetlocalScale(obj,0.5,0.5,1)
		obj:GetComponent("SkeletonGraphic"):PlayAnimation("a_1",false,function()
			local name = obj.name
			CS.UnityEngine.GameObject.Destroy(obj)
			CsBridge.objectCache:ClearGroup(name, true)
			onFinish()
		end)
	end,"HeroDecompositionSpine")
end 

function OnTogGroupClick(isOn,index)
	if not isOn then
		return
	end 
	self:SendCommand("ScreenHero",index-1)
end 

function OnHelpBtnClick()
	CsBridge.CacheAssetsByModule(self.Module,
	function()
		local view = CsBridge.OpenView("HelpView","HeroDecompositionModel",false,true)
		view:SetData(INSTRUCTION_HERODECOMPOSE)
	end, "HelpView")
end

function OnCloseBtnClick(sender)
    self:ReturnBack()
end

function CheckHasItemSlot()
    if (hasItemSlot) then
	    cnt=cnt+1
		if (cnt > 1) then
		    return true
		else
		    return false
		end
	else
	    cnt = 0
	    return false
	end
end

function OnClose()
	if not previewBtn.Gray then
		previewBtn.Gray = true
	end

	raceTogArr[1].isOn = true
	for i = 2, #raceTogArr do
		raceTogArr[i].isOn = false
	end
	CsBridge.UnityHelper.SetAnchoredPosition(raceFlag.gameObject, raceTogArr[1].transform.localPosition.x, raceFlag.localPosition.y)
end

function ResetDecompositionStatus()
    decomposed = false
end

function FinishDecomposition()
    return decomposed
end

function BeoforeReturnBack()
	self:HideView(self.gameObject.name)
end

function DoExit()

	selectPosArr = nil

	raceTogArr = nil
	raceFlag = nil

	heroGrid = nil
	selectHeroGrid = nil

	effectObj = nil
	posEffectObj = nil
	heroEffect = nil

	previewBtn = nil
	quickBtnTxt = nil

	curRace = nil
	hasItemSlot = nil
	cnt = nil
	decomposed  = nil
end