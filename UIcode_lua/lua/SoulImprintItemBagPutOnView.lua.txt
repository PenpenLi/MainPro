local soulImprintItemSlot = require('SoulImprintItemSlot')

---@type Client.Library.ToggleArchly 全部toggle
local allTog
---@type Client.Library.ToggleArchly 攻击toggle
local attackTog
---@type Client.Library.ToggleArchly 防御
local defendTog
---@type Client.Library.ToggleArchly 速度
local speedTog
---@type Client.Library.ItemSlot 中间的itemGrid
local itemGrid
---@type UnityEngine.Transform 分页光标
local raceFlagObjTrans
---@type UnityEngine.GameObject 没有任何东西的时候的提示
local centerTipsObj

---@type table 分页Toggle集合
local raceTogArr = {}
---@type table 界面数据
local viewData = {}

---@type table 分页类型
local SoulImprintItemType = {
    All = 0, ---所有
    Attack = 1, ---攻击
    Defend = 2, ---防御
    Speed = 3, ---速度
}

---@type number 当前所在分页
local curRace = SoulImprintItemType.All

function DoInit()
    self.Anim = 1
    self.Shadow = 1
    local selfTrans = self.transform
    allTog = self:GetComponentAtPath("ToggleGroup/AllToggle", CLS_TOGGLE_ARCHLY)
    attackTog = self:GetComponentAtPath("ToggleGroup/AttackToggle", CLS_TOGGLE_ARCHLY)
    defendTog = self:GetComponentAtPath("ToggleGroup/DefendToggle", CLS_TOGGLE_ARCHLY)
    speedTog = self:GetComponentAtPath("ToggleGroup/SpeedToggle", CLS_TOGGLE_ARCHLY)
    table.insert(raceTogArr, allTog)
    table.insert(raceTogArr, attackTog)
    table.insert(raceTogArr, defendTog)
    table.insert(raceTogArr, speedTog)
    itemGrid = self:GetComponentAtPath("Center/ScrollRect/Viewport/HeroGrid", CLS_UI_ITEM_GRID)
    raceFlagObjTrans = selfTrans:Find("ToggleGroup/ToggleTag")
    centerTipsObj = self:GetGameObjectAtPath("CenterTips")
end

---重置选择分类的当前tag到当前分页上面去
local function ReSetTogPosToTarget()
    for i = 1, #raceTogArr do
        if i == curRace + 1 then
            raceTogArr[i].isOn = true
        else
            raceTogArr[i].isOn = false
        end
    end
    local targetX = raceTogArr[curRace + 1].transform.localPosition.x
    local t1 = CsBridge.TweenUtils.MoveTo(raceFlagObjTrans, targetX, raceFlagObjTrans.localPosition.y, 0, nil)
    t1:DoPlay()
end

---切换分页
local function ScreenSoulItem(race)
    if not raceTogArr[race + 1].isOn then
        local offset = 10
        if curRace > race then
            offset = -offset
        end
        curRace = race
        raceTogArr[curRace + 1].isOn = true
        local targetX = raceTogArr[curRace + 1].transform.localPosition.x
        local t1 = CsBridge.TweenUtils.MoveTo(raceFlagObjTrans, targetX + offset, raceFlagObjTrans.localPosition.y, 0.15, function()
            local t2 = CsBridge.TweenUtils.MoveTo(raceFlagObjTrans, targetX, raceFlagObjTrans.localPosition.y, 0.05)
            t2:DoPlay()
        end)
        t1:DoPlay()
        self:SendCommand("ScreenSoulImprintItem", curRace)
    end
end

---刷新界面
local function RefreshView()
    if viewData == nil or #viewData <= 0 then
        centerTipsObj.gameObject:SetActive(true)
    else
        centerTipsObj.gameObject:SetActive(false)
    end
    itemGrid:RefreshItemSlots(viewData, self.gameObject, "SoulImprintItemSlot")
end

function SetParamDataList(objs)
    if objs then
        curRace = objs[0]
        ReSetTogPosToTarget()
    end
end

function OnAnimationFinished()
    self:SendCommand("InitSoulImprintItem", curRace)
    ReSetTogPosToTarget()
end

function Active()
    local playerInfo = appData:checkData("PlayerInfo")
    curRace = CsBridge.prefHelper:checkInt("SoulImprintItemRace" .. playerInfo.userId)
    ReSetTogPosToTarget()
    self:SendCommand("InitSoulImprintItem", curRace)
end

---初始化背包
function OnNotification_InitSoulImprintItem(objs)
    if objs then
        viewData = objs[0]
    end
    RefreshView()
end

---选取了一个
function OnNotification_SelectSoulImprintItem(objs)
    local index = objs[0]
    local itemData = itemGrid:GetItemDataByIndex(index)
    if itemData then
        itemData.data.IsSelected = true
        itemData.IsSelected = true
    end
end

---反选了一个
function OnNotification_CancelSelectSoulImprintItem(objs)
    local index = objs[0]
    local itemData = itemGrid:GetItemDataByIndex(index)
    if itemData then
        itemData.data.IsSelected = false
        itemData.IsSelected = false
    end
end

---所有点击
function OnAllToggleClick()
    ScreenSoulItem(SoulImprintItemType.All)
end

---工具类型的点击
function OnAttackToggleClick()
    ScreenSoulItem(SoulImprintItemType.Attack)
end

---防御类型的点击
function OnDefendToggleClick()
    ScreenSoulItem(SoulImprintItemType.Defend)
end

---速度类型的点击
function OnSpeedToggleClick()
    ScreenSoulItem(SoulImprintItemType.Speed)
end

---item点击事件
function OnHeroGridSoulImprintItemSlotClick(obj)
    self:SendCommand("ShowSoulImprintItemTips", obj.m_data)
end

---关闭按钮点击
function OnCloseBtnClick()
    self:HideView(self.gameObject.name)
end

---遮罩点击
function OnMaskClick()
    self:HideView(self.gameObject.name)
end

function OnClose()
    itemGrid:RefreshItemSlots({}, self.gameObject, "SoulImprintItemSlot")
    self:SendCommand("HideSoulImprintItemBagView")
end

function DoExit()
    allTog = nil
    attackTog = nil
    defendTog = nil
    speedTog = nil
    itemGrid = nil
    raceFlagObjTrans = nil
    centerTipsObj = nil
    raceTogArr = nil
    viewData = nil
    SoulImprintItemType = nil
    curRace = nil
end