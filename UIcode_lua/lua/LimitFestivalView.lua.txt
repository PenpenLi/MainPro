require "LimitFestivalItemSlot"

local titleImgObj, countdownTxt, descTxt,titleTxt
local itemsGrid
local count_Lab
local iconSprite
local titleArtTxt
local viewData

function DoInit()
	self.Shadow = CS.Client.Library.ShadowType.None
	self.Anim = 0
    InitUI()
end

function InitUI()
	local path = "Center/Title/titleImg"
	titleImgObj = self:GetGameObjectAtPath(path)

	path = "Center/Title/countdownTxt"
	countdownTxt = self:GetComponentAtPath(path ,CLS_TEXT)

	path = "Center/Description/descTxt"
	descTxt = self:GetComponentAtPath(path ,CLS_TEXT)

	path = "Center/ScrollRect/Viewport/LimitFestivalGird"
    itemsGrid = self:GetComponentAtPath(path ,CLS_UI_ITEM_GRID)
    
    count_Lab = self:GetComponentAtPath("Center/CountTxt" ,CLS_TEXT)
	iconSprite = self:GetComponentAtPath("Center/iconImg" ,CLS_IMAGE)
	titleArtTxt = self:GetComponentAtPath("Center/Title/TitleArtImg",CLS_LOCALIZE)
	titleTxt = self:GetComponentAtPath("Center/Title/TitleTxt",CLS_TEXT)
end

function OnNotification_RefreshActivityView(objs)
	if self.gameObject.activeInHierarchy then
		viewData = objs[0]
		RefreshView(viewData)
	end
end

function RefreshView(data)
	if data.title and data.title~="" then
		titleTxt.text = data.title
	else
		SetServerActivityArtFontByImage(titleArtTxt,data.image)
	end
	countdownTxt.text = data.restTime
    descTxt.text = data.desc
    CsBridge.IconData.SetRawImageByName(titleImgObj, data.image)
    itemsGrid:RefreshItemSlots(data.itemList, self.gameObject, "LimitFestivalItemSlot")
    count_Lab.text = tostring(data.festivalItem.count)
    if data.festivalItem.typeId==1 then
		SetIconByResourceId(iconSprite.gameObject,data.festivalItem.id)
    elseif data.festivalItem.typeId==2 then
		SetIconByItemId(iconSprite.gameObject,data.festivalItem.id)
    end
end

function OnNotification_RefreshCountdown(objs)
	local data = objs[0]
	RefreshCountdown(data)
end

function RefreshCountdown(countdownData)
	if not viewData then--not ready
		return
	end

	local currentActivityID = viewData.id
	for activityID, restTime in pairs(countdownData) do
		if activityID == currentActivityID then
			countdownTxt.text = restTime
			return
		end
	end
end

function OnLimitFestivalGirdBuyBtnClick(obj)
	local currentItemData = obj.m_data
	self:SendCommand("BuyShopItemWithDealView", currentItemData)
end

function OnLimitFestivalGirdItemSlotClick(obj)
	self:SendCommand("OpenTipView",obj.m_data.reward)
end 

function OnNotification_CloseActivityView(obj)
	self:HideView(self.gameObject.name)
end

function DoExit()
	titleImgObj = nil
	countdownTxt = nil
	descTxt = nil 
	titleTxt = nil
	itemsGrid = nil
	count_Lab = nil
	iconSprite = nil
	titleArtTxt = nil
	viewData = nil
end