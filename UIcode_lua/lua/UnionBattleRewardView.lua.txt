--[[
	file: UnionBattleRewardView.lua
	author: hangang
	description: Union battle rewards panel
]]

require "ItemSlot"

local curRankTxt, ruleTxt, cdTxt
local ownSharedRewardGrid, ownGenRewardGrid, rewardGrid

--Initialize on awake---------------------------------------------------------------
function DoInit()
	self.Shadow = 0     --shadow type
	InitUI()            --cache UI items
end 

function InitUI()
	local selfTrans = self.transform
	local path = "Center/ScrollRect/Viewport/RewardGrid"
	rewardGrid = selfTrans:GetComponentAtPath(path, CLS_UI_ITEM_GRID)

    local rewardGridTrans = selfTrans:Find(path)    
    path = "SelfRewardGO/CurRankTxt"
    curRankTxt = rewardGridTrans:GetComponentAtPath(path, CLS_TEXT)
    
    path = "SelfRewardGO/GenRewardGrid"
    ownGenRewardGrid = rewardGridTrans:GetComponentAtPath(path, CLS_UI_ITEM_GRID)
    path = "SelfRewardGO/SharedRewardGrid"
    ownSharedRewardGrid = rewardGridTrans:GetComponentAtPath(path, CLS_UI_ITEM_GRID)

    path = "RuleGO/RuleTxt"
    ruleTxt = rewardGridTrans:GetComponentAtPath(path, CLS_TEXT)

    path = "TimerGO/TimeTxt"
    cdTxt = rewardGridTrans:GetComponentAtPath(path, CLS_TEXT)
end

--UIController events handlers-------------------------------------------------------
function OnNotification_RefreshRewardView(objs)
	if self.gameObject.activeInHierarchy then
		local viewData = objs[0]
		RefreshView(viewData)
	end
end

function RefreshView(data)
    curRankTxt.text = data.curRank
    ruleTxt.text = data.rules

    RefreshCD(data.cdText)
	ownSharedRewardGrid:RefreshItemSlots(data.ownSharedRewards, self.gameObject, "ItemSlot")
	ownGenRewardGrid:RefreshItemSlots(data.ownGenRewards, self.gameObject, "ItemSlot")
	rewardGrid:RefreshItemSlots(data.rewards, self.gameObject, "UnionBattleRewardItemSlot")
	
	local scroll = self:GetComponentAtPath("Center/ScrollRect", "UnityEngine.UI.ScrollRect")
	scroll.verticalNormalizedPosition = 1
end

function OnUnionBattleRewardItemSlotBindValue(slot,data)
	local rankingTxt=slot:GetComponentAtPath("RankTxt",CLS_TEXT)
	rankingTxt.text = data.rankText

	local ribbonImageObj=slot:GetGameObjectAtPath("RankSprite",CLS_IMAGE)
	ribbonImageObj:SetActive(data.showRibbon)
	if data.showRibbon then
		CsBridge.IconData.SetIconByName(ribbonImageObj, data.ribbonIcon)
	end

	local rewardGrid = slot:GetComponentAtPath("SharedRewardGrid",CLS_UI_ITEM_GRID)
	rewardGrid:RefreshItemSlots(data.sharedRewards, self.gameObject, "ItemSlot")
	rewardGrid = slot:GetComponentAtPath("GenRewardGrid",CLS_UI_ITEM_GRID)
	rewardGrid:RefreshItemSlots(data.genRewards, self.gameObject, "ItemSlot")
end

function RefreshCD(content)
    cdTxt.text = content
end

function OnNotification_RefreshRewardViewCD(objs)
	if self.gameObject.activeInHierarchy then
		RefreshCD(objs[0])
	end
end

function OnNotification_CloseUnionBattleRankView(obj)
	self:HideView(self.gameObject.name)
end

--UI event handlers-------------------------------------------------------------------
function OnSharedRewardGridItemSlotClick(obj)
	if obj.gameObject.name == "ItemSlot" then
		local item = obj.m_data
    	self:SendCommand("OpenTipView", item)
	end
end

function OnGenRewardGridItemSlotClick(obj)
	local item = obj.m_data
    self:SendCommand("OpenTipView", item)
end

function OnDetailsBtnClick(sender)
	self:SendCommand("OpenRewardDetailsView")
end

function DoExit()
	curRankTxt = nil
	ruleTxt = nil
	cdTxt = nil
	ownSharedRewardGrid = nil
	ownGenRewardGrid = nil
	rewardGrid = nil
end