--
-- 版权所有：archly
-- Author: dyl
-- Date: 2018-04-27 11:51:25

local loadedPiecesItemSlot = require "BagPiecesItemSlot"

local piecesGrid

local isInit = false

local hasItemSlot = false
local cnt = 0

function DoInit()	
    self.Anim = 0
end

function InitUI()
    piecesGrid = self:GetComponentAtPath("Center/PiecesSV/ScrollRect/Viewport/PiecesGrid",CLS_UI_ITEM_GRID)
end 

function OnAnimationFinished()
    if not isInit then
        InitUI()
        isInit = true
    end
	hasItemSlot = false
	cnt = 0
    self:SendCommand("InitPiecesData")
end

function OnNotification_RefreshPiecesView(objs)
    local piecesArr = objs[0]
    piecesGrid:RefreshItemSlots(piecesArr, self.gameObject, "BagPiecesItemSlot")
	hasItemSlot = true
end

function OnNotification_RefreshHeroPiecesRedFlag(objs)
    local redPieces = objs[0]
    for i,piece in ipairs(redPieces) do
        piecesGrid:SingleRefreshSlot(piece)
    end
end
     
function OnPiecesGridItemSlotClick(obj)
    self:SendCommand("OpenTipView",obj.m_data)
end

function OnNotification_CloseSubView(objs)
	self:HideView(self.gameObject.name)
end 

function CheckHasItemSlot()
    if (hasItemSlot) then
	    cnt=cnt+1
		if (cnt > 1) then
		    return true
		else
		    return false
		end
	else
	    cnt = 0
	    return false
	end
end

function DoExit()
	loadedPiecesItemSlot = nil
    piecesGrid = nil
    isInit = nil
    hasItemSlot = nil
    cnt = nil
end