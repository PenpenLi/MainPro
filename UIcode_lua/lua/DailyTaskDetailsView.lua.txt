require "DailyTaskItemSlot"

---@type UnityEngine.GameObject 通行证图标
local subscriberImgObj
---@type UnityEngine.TextMesh 显示通行证倒计时
local subscriptionTimeTxt
---@type UnityEngine.UI.Slider 每日任务的进度条
local taskSlider
---@type UnityEngine.TextMesh 进度条上面的文字
local taskSliderTxt
---@type UnityEngine.GameObject 购买按钮
local buySubscribeBtnObj
---@type UnityEngine.TextMesh 购买按钮上面的文字
local buySubscribeBtnCostTxt
---@type Client.Library.UIItemGrid
local itemGrid
---@type Client.Library.ButtonArchly 已购买按钮
local alreadyBuyBtn
---@type UnityEngine.GameObject
local alreadyBuyBtnObj
---@type UnityEngine.TextMesh
local rewardRemainTimeTxt

---@type Client.Library.ViewBase
local selfViewBase

function DoInit()
    selfViewBase = self
    selfViewBase.Anim = 0
    selfViewBase.Shadow = 0
    subscriberImgObj = selfViewBase:GetGameObjectAtPath("AllTask/SubscriptionIconImg")
    subscriptionTimeTxt = selfViewBase:GetComponentAtPath("AllTask/SubscriptionIconImg/SubscribeTimeTxt", CLS_TEXT)
    taskSlider = selfViewBase:GetComponentAtPath("AllTask/TaskSlider", CLS_SLIDER)
    taskSliderTxt = selfViewBase:GetComponentAtPath("AllTask/TaskSlider/numberTxt", CLS_TEXT)
    buySubscribeBtnObj = selfViewBase:GetGameObjectAtPath("BuyBtn")
    buySubscribeBtnCostTxt = selfViewBase:GetComponentAtPath("BuyBtn/numberTxt", CLS_TEXT)
    itemGrid = selfViewBase:GetComponentAtPath("TaskSV/ScrollRect/Viewport/TaskGrid", CLS_UI_ITEM_GRID)
    alreadyBuyBtn = selfViewBase:GetComponentAtPath("AlreadyBuyBtn", CLS_BUTTON_ARCHLY)
    alreadyBuyBtnObj = alreadyBuyBtn.gameObject
    rewardRemainTimeTxt = selfViewBase:GetComponentAtPath("Bottom/RefreshTxt/TimeTxt", CLS_TEXT)
end

function OnAnimationFinished()
    selfViewBase:SendCommand("InitDailyTaskView")
    subscriptionTimeTxt.text = string.format(Language:getStr("SubscribeRemainTimeTips"), "00:00:00")
end

function Active()
    selfViewBase:SendCommand("InitDailyTaskView")
end

---初始化界面
local function InitView(viewData)
    itemGrid:RefreshItemSlots(viewData.dailyTaskArr, selfViewBase.gameObject, "DailyTaskItemSlot")
    taskSlider.value = viewData.sliderValue
    taskSliderTxt.text = viewData.sliderStr
    if viewData.showAllBtn then
        buySubscribeBtnCostTxt.text = viewData.payData.showPrice
        buySubscribeBtnObj:SetActive(viewData.showBuyBtn)
        alreadyBuyBtnObj:SetActive(not viewData.showBuyBtn)
        alreadyBuyBtn.Gray = viewData.alreadyBuyGray
    else
        buySubscribeBtnObj:SetActive(false)
        alreadyBuyBtnObj:SetActive(false)
    end
    subscriptionTimeTxt.text = viewData.subscribeRemainTimeStr
    CsBridge.IconData.SetIconByName(subscriberImgObj, viewData.iconName)
end

---初始化界面
function OnNotification_InitDailyTaskView(objs)
    local viewData = objs[0]
    InitView(viewData)
end

---刷新订阅的倒计时
function OnNotification_RefreshSubscribeStr(objs)
    local str = objs[0]
    subscriptionTimeTxt.text = str
end

---刷新周期倒计时
function OnNotification_ShowRewardRemainTime(objs)
    rewardRemainTimeTxt.text = objs[0]
end

---显示介绍
function OnInfBtnClick()
    selfViewBase:SendCommand("ShowDailyTaskRule")
end

---显示物品信息
function OnTaskGridItemSlotClick(obj)
    local data = obj.m_data
    selfViewBase:SendCommand("ShowItemTip", data.reward)
end

---跳转界面
function OnTaskGridGoBtnClick(obj)
    local data = obj.m_data
    selfViewBase:SendCommand("LinkSystem", data)
end

---收取按钮点击
function OnTaskGridReceivedBtnClick(obj)
    local data = obj.m_data
    selfViewBase:SendCommand("GetDailyTaskReward", data)
end

---已购买点击
function OnAlreadyBuyBtnClick()
    selfViewBase:SendCommand("AlreadyBuyBtnClick")
end

---购买点击
function OnBuyBtnClick()
    selfViewBase:SendCommand("BuySubscribe")
end

---关闭界面之前关闭子界面
function BeoforeReturnBack()
    selfViewBase:HideView(selfViewBase.gameObject.name)
end

function OnClose()

end

function DoExit()
    subscriberImgObj = nil
    subscriptionTimeTxt = nil
    taskSlider = nil
    taskSliderTxt = nil
    buySubscribeBtnObj = nil
    buySubscribeBtnCostTxt = nil
    itemGrid = nil
    alreadyBuyBtn = nil
    alreadyBuyBtnObj = nil
    selfViewBase = nil
    rewardRemainTimeTxt = nil
end