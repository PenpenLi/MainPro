local actData
local bgImg
local titleArtTxt
local rewardGrid
local receiveBtn
local ruleTxt
local isOver

function DoInit()
	self.Anim = 0
	self.Shadow = CS.Client.Library.ShadowType.None
	InitUI()
end 
function InitUI()
	bgImg = self:GetGameObjectAtPath("BGS/bgImg")
	titleArtTxt = self:GetComponentAtPath("BGS/TitleArtImg",CLS_LOCALIZE)
	rewardGrid = self:GetComponentAtPath("other/RewardGrid" ,CLS_UI_ITEM_GRID)
	receiveBtn = self:GetComponentAtPath("other/ReceiveBtn" ,CLS_BUTTON_ARCHLY)
	ruleTxt = self:GetComponentAtPath("other/DecTxt" ,CLS_TEXT)
	ruleTxt.text = CsBridge.UnityHelper.SpaceChange(CsBridge.UnityHelper.ReplaceString(ResTblContainer:GetPropToStr(INSTRUCTION_MONOPOLY_BOX, Instruction.content, Instruction.tblName)))
end
function OnAnimationFinished()
	CsBridge.IconData.SetRawImageByName(bgImg,"ui_bg_activity_qybx")
	SetServerActivityArtFontByImage(titleArtTxt,"ui_bg_activity_qybx")
	self:SendCommand("AnimationFinished")
end
function SetParamDataList(objs)
	if objs ~= nil then

	end
end

function OnNotification_SetIsOver(objs)
	isOver = objs[0]
	receiveBtn.Gray = isOver
end

function OnNotification_SetActivityData(obj)
	actData = obj[0]
	isOver = actData.isOver
	receiveBtn.Gray = isOver
	rewardGrid:RefreshItemSlots(actData.rewardItems,self.gameObject,"ItemSlot")
end

function OnRewardGridItemSlotClick(obj)
	local item = obj.m_data
	if item.typeId == 3 then
		return
	end
    CsBridge.CacheAssetsByModule(self.Module,
	function()
		local item = obj.m_data
		local view = CsBridge.OpenView("ItemTipView", "ItemTipModel",false,true)
		local rewardTmp={}
		rewardTmp.id=item.id
		rewardTmp.typeId=item.typeId
		rewardTmp.count=1
		if item.typeId == 0 then
			rewardTmp.attrs = item.attrs
		end 
		if item.typeId == 4 then
			rewardTmp.level = item.level
		end 
		view:SetParamDataList(rewardTmp,itemBaseIndex+itemDespIndex+PropsIndex+itemSuitIndex)
		view:SendCommand("InitItemData")
	end,"ItemTipView")
end

function OnReceiveBtnClick(sender)
	if isOver then
		CsBridge.hintUILayer:ShowHintBox(Language:getStr("Monopoly_HasGetBoxRewards"))
	else
		self:SendCommand("GetAwards",actData)
	end
end

function OnRuleBtnClick(sender)
	ShowHelpTip(self,INSTRUCTION_MONOPOLY_BOX_1)
end

function OnNotification_CloseActivityView(obj)
	self:HideView(self.gameObject.name)
end

function BeoforeReturnBack()
    self:HideView(self.gameObject.name)
end

function DoExit()
	actData = nil
	bgImg = nil
	titleArtTxt = nil
	rewardGrid = nil
end