local settingVersionUtils = require "SettingVersionUtils"
local userNameInput
local passwordInput

local userName
local pwd

local changeAccountCallback

function DoInit()
    self.Shadow = 1
    userNameInput = CsBridge.GetInputFromView(self, "Center/AccountInput")
    passwordInput = CsBridge.GetInputFromView(self, "Center/PasswordInput")
end

function OnOpen()
    userNameInput.text = ""
    passwordInput.text = ""
end

function SetParamDataList(obj)
    changeAccountCallback = obj[0]
end

function OnConfirmBtnClick(sender)
    userName = userNameInput.text
    local password = passwordInput.text
    pwd = settingVersionUtils.EncriptionPwd(passwordInput.text)

    if (string.len(userName) == 0) then
        CsBridge.hintUILayer:ShowHintBox(Language:getStr("local_1"))
    elseif (string.len(password) == 0) then
        CsBridge.hintUILayer:ShowHintBox(Language:getStr("local_2"))
    elseif (changeAccountCallback ~= nil and CsBridge.UnityHelper.GetString("local_userName") == userName) then
        CsBridge.hintUILayer:ShowHintBox(Language:getStr("Login_AccountHasLogin"), 2)
    else
        CsBridge.messageManager:PopMsgBox("", Language:getStr("local_5"), Language:getStr("local_cancel"), nil, Language:getStr("local_confirm"), OnConfirmCallBack)
    end
end

function OnConfirmCallBack()
    if (changeAccountCallback ~= nil) then
        self:SendCommand("CheckAccountAndPwd", userName, pwd)
        return
    end
    self:SendCommand("Account", userName, pwd)
end

function OnNotification_CheckAccountAndPwd(objs)
    changeAccountCallback(userName, pwd)
end

function OnNotification_AccountResp(objs)
    CsBridge.UnityHelper.SetString("local_userName", userName)
    CsBridge.UnityHelper.SetString("local_pwd", pwd)

    local resp = objs[0]
    EnterMainView(resp)

    self:HideView(self.gameObject.name)
end

function EnterMainView(resp)
    if (changeAccountCallback == nil) then
        CsBridge.httpBehaviour.serverURL = resp.url
        CsBridge.httpBehaviour:CheckData("enterGame", {}, function()
            MsgCenter:Broadcast(CsBridge.SysMsgDef.Notify_RecordOnline)
            CsBridge.moduleManager:ResetMainModule("MainModule", onLoad)
        end)
    end
end

function OnCancelBtnClick(sender)
    self:HideView(self.gameObject.name)
end

function OnCloseBtnClick(sender)
    self:HideView(self.gameObject.name)
end

function onLoad()
    MsgCenter:Broadcast(Notify_OnMain)
end

function DoExit()
    userNameInput = nil
    passwordInput = nil
    userName = nil
    pwd = nil
    changeAccountCallback = nil
    settingVersionUtils = nil
end
