--[[
	file: LeadersView.lua
	author: hangang
	description: Leaderboards' container
]]

local ChildViewIdx =
{
	Power = 1,
	Level = 2,
	GloryRoad = 3,
	Tower = 4,
}

local currentTabIndex = 0
local childToggles
local emptyTipsObj

--Initialize on awake---------------------------------------------------------------
function DoInit()
	self.Shadow = 1     --shadow type
	InitUI()            --cache UI items
end 

function InitUI()
	local selfTrans = self.transform
	childToggles = {}
	local path = "Top/TogGroup"
	local togglesRoot = selfTrans:Find(path)
	for i = 0, togglesRoot.childCount - 1 do
		local toggle = togglesRoot:GetChild(i):GetComponent(CLS_TOGGLE_ARCHLY)
		childToggles[toggle.Index] = toggle
	end

	path = "EmptyTips"
	emptyTipsObj = selfTrans:GetGameObjectAtPath(path)
end

function SetParamDataList(dataArray)
	currentTabIndex = dataArray[0] - 1
end

--On animation finished event--------------------------------------------------------
function OnAnimationFinished()
	local idx = currentTabIndex
	childToggles[idx].isOn = false
	childToggles[idx].isOn = true
end

--UIController events handlers-------------------------------------------------------
function OnNotification_SetEmptyTips(objs)
	local visible = objs[0]
	emptyTipsObj:SetActive(visible)
end

--UI event handlers-------------------------------------------------------------------
function OnTogGroupClick(isOn, index)
	if not isOn then return end
	if currentTabIndex == index + 1 then
		return
	end
	
	currentTabIndex = index + 1
	if currentTabIndex == ChildViewIdx.Power then
		self:SendCommand("OpenPowerView")
	elseif currentTabIndex == ChildViewIdx.Level then
		self:SendCommand("OpenLevelView")
	elseif currentTabIndex == ChildViewIdx.GloryRoad then
		self:SendCommand("OpenGloryRoadView")
	elseif currentTabIndex == ChildViewIdx.Tower then
		self:SendCommand("OpenTowerView")
	end
end

--On closing--------------------------------------------------------------------------
function OnMaskClick(sender)
	Close()
end

function OnCloseBtnClick(sender)
	Close()
end

function Close() 
	currentTabIndex = 0
    self:SendCommand("CloseLeadersView")
	self:ReturnBack()
end

function DoExit()
	ChildViewIdx = nil

	currentTabIndex  = nil
	childToggles = nil
	emptyTipsObj = nil
end

function DoExit()
	ChildViewIdx = nil

	currentTabIndex  = nil
	childToggles = nil
	emptyTipsObj = nil
end